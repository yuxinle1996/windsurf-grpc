// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file product_analytics_pb.proto (package exa.product_analytics_pb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message exa.product_analytics_pb.RecordAnalyticsEventRequest
 */
export class RecordAnalyticsEventRequest extends Message<RecordAnalyticsEventRequest> {
  /**
   * @generated from field: string event_name = 1;
   */
  eventName = "";

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey = "";

  /**
   * @generated from field: string installation_id = 3;
   */
  installationId = "";

  /**
   * @generated from field: string ide_name = 4;
   */
  ideName = "";

  /**
   * @generated from field: string os = 5;
   */
  os = "";

  /**
   * @generated from field: string codeium_version = 6;
   */
  codeiumVersion = "";

  /**
   * @generated from field: string ide_version = 7;
   */
  ideVersion = "";

  /**
   * @generated from field: uint64 duration_ms = 8;
   */
  durationMs = protoInt64.zero;

  /**
   * @generated from field: map<string, string> extra = 9;
   */
  extra: { [key: string]: string } = {};

  /**
   * @generated from field: map<string, bool> experiments = 10;
   */
  experiments: { [key: string]: boolean } = {};

  /**
   * @generated from field: string plan_tier = 11;
   */
  planTier = "";

  /**
   * @generated from field: string device_fingerprint = 12;
   */
  deviceFingerprint = "";

  /**
   * @generated from field: string ide_type = 13;
   */
  ideType = "";

  constructor(data?: PartialMessage<RecordAnalyticsEventRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.product_analytics_pb.RecordAnalyticsEventRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "event_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "ide_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "os", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "codeium_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "ide_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "duration_ms", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "extra", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 10, name: "experiments", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 8 /* ScalarType.BOOL */} },
    { no: 11, name: "plan_tier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "device_fingerprint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ide_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecordAnalyticsEventRequest {
    return new RecordAnalyticsEventRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecordAnalyticsEventRequest {
    return new RecordAnalyticsEventRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecordAnalyticsEventRequest {
    return new RecordAnalyticsEventRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RecordAnalyticsEventRequest | PlainMessage<RecordAnalyticsEventRequest> | undefined, b: RecordAnalyticsEventRequest | PlainMessage<RecordAnalyticsEventRequest> | undefined): boolean {
    return proto3.util.equals(RecordAnalyticsEventRequest, a, b);
  }
}

/**
 * @generated from message exa.product_analytics_pb.RecordAnalyticsEventResponse
 */
export class RecordAnalyticsEventResponse extends Message<RecordAnalyticsEventResponse> {
  constructor(data?: PartialMessage<RecordAnalyticsEventResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.product_analytics_pb.RecordAnalyticsEventResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecordAnalyticsEventResponse {
    return new RecordAnalyticsEventResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecordAnalyticsEventResponse {
    return new RecordAnalyticsEventResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecordAnalyticsEventResponse {
    return new RecordAnalyticsEventResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RecordAnalyticsEventResponse | PlainMessage<RecordAnalyticsEventResponse> | undefined, b: RecordAnalyticsEventResponse | PlainMessage<RecordAnalyticsEventResponse> | undefined): boolean {
    return proto3.util.equals(RecordAnalyticsEventResponse, a, b);
  }
}

