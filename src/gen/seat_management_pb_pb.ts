// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file seat_management_pb.proto (package exa.seat_management_pb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { Permission, PlanInfo, TeamsFeaturesMetadata, TeamsTier, UserTeamStatus } from "./codeium_common_pb_pb.js";

/**
 * @generated from enum exa.seat_management_pb.CascadeSeatType
 */
export enum CascadeSeatType {
  /**
   * @generated from enum value: CASCADE_SEAT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CASCADE_SEAT_TYPE_ENTRY = 1;
   */
  ENTRY = 1,

  /**
   * @generated from enum value: CASCADE_SEAT_TYPE_STANDARD = 2;
   */
  STANDARD = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CascadeSeatType)
proto3.util.setEnumType(CascadeSeatType, "exa.seat_management_pb.CascadeSeatType", [
  { no: 0, name: "CASCADE_SEAT_TYPE_UNSPECIFIED" },
  { no: 1, name: "CASCADE_SEAT_TYPE_ENTRY" },
  { no: 2, name: "CASCADE_SEAT_TYPE_STANDARD" },
]);

/**
 * UserSSOLoginRedirect接口请求
 *
 * @generated from message exa.seat_management_pb.UserSSOLoginRedirectRequest
 */
export class UserSSOLoginRedirectRequest extends Message<UserSSOLoginRedirectRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  constructor(data?: PartialMessage<UserSSOLoginRedirectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.UserSSOLoginRedirectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSSOLoginRedirectRequest {
    return new UserSSOLoginRedirectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSSOLoginRedirectRequest {
    return new UserSSOLoginRedirectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSSOLoginRedirectRequest {
    return new UserSSOLoginRedirectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UserSSOLoginRedirectRequest | PlainMessage<UserSSOLoginRedirectRequest> | undefined, b: UserSSOLoginRedirectRequest | PlainMessage<UserSSOLoginRedirectRequest> | undefined): boolean {
    return proto3.util.equals(UserSSOLoginRedirectRequest, a, b);
  }
}

/**
 * UserSSOLoginRedirect接口响应
 *
 * @generated from message exa.seat_management_pb.UserSSOLoginRedirectResponse
 */
export class UserSSOLoginRedirectResponse extends Message<UserSSOLoginRedirectResponse> {
  /**
   * @generated from field: bool should_redirect = 1;
   */
  shouldRedirect = false;

  /**
   * @generated from field: string sso_provider_id = 2;
   */
  ssoProviderId = "";

  /**
   * @generated from field: bool disallow_enterprise_user_login = 3;
   */
  disallowEnterpriseUserLogin = false;

  /**
   * @generated from field: string redirect_url = 4;
   */
  redirectUrl = "";

  constructor(data?: PartialMessage<UserSSOLoginRedirectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.UserSSOLoginRedirectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "should_redirect", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "sso_provider_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "disallow_enterprise_user_login", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSSOLoginRedirectResponse {
    return new UserSSOLoginRedirectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSSOLoginRedirectResponse {
    return new UserSSOLoginRedirectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSSOLoginRedirectResponse {
    return new UserSSOLoginRedirectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UserSSOLoginRedirectResponse | PlainMessage<UserSSOLoginRedirectResponse> | undefined, b: UserSSOLoginRedirectResponse | PlainMessage<UserSSOLoginRedirectResponse> | undefined): boolean {
    return proto3.util.equals(UserSSOLoginRedirectResponse, a, b);
  }
}

/**
 * GetCurrentUser接口请求
 *
 * @generated from message exa.seat_management_pb.GetCurrentUserRequest
 */
export class GetCurrentUserRequest extends Message<GetCurrentUserRequest> {
  /**
   * @generated from field: string auth_token = 1;
   */
  authToken = "";

  /**
   * @generated from field: bool generate_profile_picture_url = 2;
   */
  generateProfilePictureUrl = false;

  /**
   * @generated from field: bool create_if_not_exist = 3;
   */
  createIfNotExist = false;

  /**
   * @generated from field: bool include_subscription = 4;
   */
  includeSubscription = false;

  /**
   * @generated from field: string sso_token = 5;
   */
  ssoToken = "";

  /**
   * @generated from field: string saml_provider_id = 6;
   */
  samlProviderId = "";

  constructor(data?: PartialMessage<GetCurrentUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.GetCurrentUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "generate_profile_picture_url", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "create_if_not_exist", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "include_subscription", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "sso_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "saml_provider_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrentUserRequest {
    return new GetCurrentUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrentUserRequest {
    return new GetCurrentUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrentUserRequest {
    return new GetCurrentUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCurrentUserRequest | PlainMessage<GetCurrentUserRequest> | undefined, b: GetCurrentUserRequest | PlainMessage<GetCurrentUserRequest> | undefined): boolean {
    return proto3.util.equals(GetCurrentUserRequest, a, b);
  }
}

/**
 * GetCurrentUser接口响应
 *
 * @generated from message exa.seat_management_pb.GetCurrentUserResponse
 */
export class GetCurrentUserResponse extends Message<GetCurrentUserResponse> {
  /**
   * @generated from field: exa.seat_management_pb.User user = 1;
   */
  user?: User;

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  /**
   * @generated from field: exa.seat_management_pb.Team team = 4;
   */
  team?: Team;

  /**
   * @generated from field: exa.seat_management_pb.UserSettings subscription = 5;
   */
  subscription?: UserSettings;

  /**
   * @generated from field: exa.codeium_common_pb.PlanInfo plan_info = 6;
   */
  planInfo?: PlanInfo;

  /**
   * @generated from field: exa.seat_management_pb.UserRole role = 7;
   */
  role?: UserRole;

  /**
   * @generated from field: exa.codeium_common_pb.Permission permissions = 8;
   */
  permissions = Permission.UNSPECIFIED;

  /**
   * @generated from field: exa.seat_management_pb.UserTeamDetails user_team_details = 9;
   */
  userTeamDetails?: UserTeamDetails;

  /**
   * @generated from field: exa.seat_management_pb.ReferralInfo referral = 10;
   */
  referral?: ReferralInfo;

  /**
   * @generated from field: map<int32, exa.codeium_common_pb.TeamsFeaturesMetadata> team_features = 11;
   */
  teamFeatures: { [key: number]: TeamsFeaturesMetadata } = {};

  /**
   * @generated from field: repeated string group_ids = 12;
   */
  groupIds: string[] = [];

  constructor(data?: PartialMessage<GetCurrentUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.GetCurrentUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "team", kind: "message", T: Team },
    { no: 5, name: "subscription", kind: "message", T: UserSettings },
    { no: 6, name: "plan_info", kind: "message", T: PlanInfo },
    { no: 7, name: "role", kind: "message", T: UserRole },
    { no: 8, name: "permissions", kind: "enum", T: proto3.getEnumType(Permission) },
    { no: 9, name: "user_team_details", kind: "message", T: UserTeamDetails },
    { no: 10, name: "referral", kind: "message", T: ReferralInfo },
    { no: 11, name: "team_features", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "message", T: TeamsFeaturesMetadata} },
    { no: 12, name: "group_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrentUserResponse {
    return new GetCurrentUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrentUserResponse {
    return new GetCurrentUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrentUserResponse {
    return new GetCurrentUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCurrentUserResponse | PlainMessage<GetCurrentUserResponse> | undefined, b: GetCurrentUserResponse | PlainMessage<GetCurrentUserResponse> | undefined): boolean {
    return proto3.util.equals(GetCurrentUserResponse, a, b);
  }
}

/**
 * @generated from message exa.seat_management_pb.User
 */
export class User extends Message<User> {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string email = 3;
   */
  email = "";

  /**
   * @generated from field: google.protobuf.Timestamp signup_time = 4;
   */
  signupTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_update_time = 5;
   */
  lastUpdateTime?: Timestamp;

  /**
   * @generated from field: string id = 6;
   */
  id = "";

  /**
   * @generated from field: string team_id = 7;
   */
  teamId = "";

  /**
   * @generated from field: exa.codeium_common_pb.UserTeamStatus team_status = 8;
   */
  teamStatus = UserTeamStatus.UNSPECIFIED;

  /**
   * @generated from field: string username = 9;
   */
  username = "";

  /**
   * @generated from field: string preferred_time_zone = 10;
   */
  preferredTimeZone = "";

  /**
   * @generated from field: bool public_profile_enabled = 11;
   */
  publicProfileEnabled = false;

  /**
   * @generated from field: string bio = 12;
   */
  bio = "";

  /**
   * @generated from field: bool pro = 13;
   */
  pro = false;

  /**
   * @generated from field: string profile_picture_uri = 14;
   */
  profilePictureUri = "";

  /**
   * @generated from field: string profile_picture_presigned_url = 15;
   */
  profilePicturePresignedUrl = "";

  /**
   * @generated from field: bool disable_codeium = 16;
   */
  disableCodeium = false;

  /**
   * @generated from field: string occupation_company = 17;
   */
  occupationCompany = "";

  /**
   * @generated from field: string occupation_role = 18;
   */
  occupationRole = "";

  /**
   * @generated from field: bool newsletter = 19;
   */
  newsletter = false;

  /**
   * @generated from field: bool disabled_telemetry = 20;
   */
  disabledTelemetry = false;

  /**
   * @generated from field: string inbound_source = 21;
   */
  inboundSource = "";

  /**
   * @generated from field: string signup_stage = 22;
   */
  signupStage = "";

  /**
   * @generated from field: uint32 years_of_experience_min = 23;
   */
  yearsOfExperienceMin = 0;

  /**
   * @generated from field: uint32 years_of_experience_max = 24;
   */
  yearsOfExperienceMax = 0;

  /**
   * @generated from field: bool used_trial = 25;
   */
  usedTrial = false;

  /**
   * @generated from field: google.protobuf.Timestamp first_windsurf_use_time = 26;
   */
  firstWindsurfUseTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp windsurf_pro_trial_end_time = 27;
   */
  windsurfProTrialEndTime?: Timestamp;

  /**
   * @generated from field: int64 used_prompt_credits = 28;
   */
  usedPromptCredits = protoInt64.zero;

  /**
   * @generated from field: int64 used_flow_credits = 29;
   */
  usedFlowCredits = protoInt64.zero;

  /**
   * @generated from field: string referral_code = 30;
   */
  referralCode = "";

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "signup_time", kind: "message", T: Timestamp },
    { no: 5, name: "last_update_time", kind: "message", T: Timestamp },
    { no: 6, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "team_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "team_status", kind: "enum", T: proto3.getEnumType(UserTeamStatus) },
    { no: 9, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "preferred_time_zone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "public_profile_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "bio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "pro", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "profile_picture_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "profile_picture_presigned_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "disable_codeium", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "occupation_company", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "occupation_role", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "newsletter", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 20, name: "disabled_telemetry", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 21, name: "inbound_source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "signup_stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "years_of_experience_min", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 24, name: "years_of_experience_max", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 25, name: "used_trial", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 26, name: "first_windsurf_use_time", kind: "message", T: Timestamp },
    { no: 27, name: "windsurf_pro_trial_end_time", kind: "message", T: Timestamp },
    { no: 28, name: "used_prompt_credits", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 29, name: "used_flow_credits", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "referral_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}

/**
 * @generated from message exa.seat_management_pb.UserSettings
 */
export class UserSettings extends Message<UserSettings> {
  /**
   * @generated from field: bool exists = 1;
   */
  exists = false;

  /**
   * @generated from field: bool newsletter = 2;
   */
  newsletter = false;

  /**
   * @generated from field: bool disabled_telemetry = 3;
   */
  disabledTelemetry = false;

  /**
   * @generated from field: string inbound_source = 4;
   */
  inboundSource = "";

  /**
   * @generated from field: string signup_stage = 5;
   */
  signupStage = "";

  constructor(data?: PartialMessage<UserSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.UserSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "exists", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "newsletter", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "disabled_telemetry", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "inbound_source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "signup_stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSettings {
    return new UserSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSettings {
    return new UserSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSettings {
    return new UserSettings().fromJsonString(jsonString, options);
  }

  static equals(a: UserSettings | PlainMessage<UserSettings> | undefined, b: UserSettings | PlainMessage<UserSettings> | undefined): boolean {
    return proto3.util.equals(UserSettings, a, b);
  }
}

/**
 * @generated from message exa.seat_management_pb.UserTeamDetails
 */
export class UserTeamDetails extends Message<UserTeamDetails> {
  /**
   * @generated from field: string auth_uid = 1;
   */
  authUid = "";

  /**
   * @generated from field: string team_id = 2;
   */
  teamId = "";

  /**
   * @generated from field: bool has_cascade_seat = 3;
   */
  hasCascadeSeat = false;

  constructor(data?: PartialMessage<UserTeamDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.UserTeamDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "team_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "has_cascade_seat", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserTeamDetails {
    return new UserTeamDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserTeamDetails {
    return new UserTeamDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserTeamDetails {
    return new UserTeamDetails().fromJsonString(jsonString, options);
  }

  static equals(a: UserTeamDetails | PlainMessage<UserTeamDetails> | undefined, b: UserTeamDetails | PlainMessage<UserTeamDetails> | undefined): boolean {
    return proto3.util.equals(UserTeamDetails, a, b);
  }
}

/**
 * @generated from message exa.seat_management_pb.ReferralInfo
 */
export class ReferralInfo extends Message<ReferralInfo> {
  /**
   * @generated from field: string referrer_name = 1;
   */
  referrerName = "";

  /**
   * @generated from field: string referrer_email = 2;
   */
  referrerEmail = "";

  /**
   * @generated from field: google.protobuf.Timestamp referral_accepted_time = 3;
   */
  referralAcceptedTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp granted_time = 4;
   */
  grantedTime?: Timestamp;

  constructor(data?: PartialMessage<ReferralInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.ReferralInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "referrer_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "referrer_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "referral_accepted_time", kind: "message", T: Timestamp },
    { no: 4, name: "granted_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralInfo {
    return new ReferralInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralInfo {
    return new ReferralInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralInfo {
    return new ReferralInfo().fromJsonString(jsonString, options);
  }

  static equals(a: ReferralInfo | PlainMessage<ReferralInfo> | undefined, b: ReferralInfo | PlainMessage<ReferralInfo> | undefined): boolean {
    return proto3.util.equals(ReferralInfo, a, b);
  }
}

/**
 * @generated from message exa.seat_management_pb.Team
 */
export class Team extends Message<Team> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.Timestamp signup_time = 3;
   */
  signupTime?: Timestamp;

  /**
   * @generated from field: string invite_id = 4;
   */
  inviteId = "";

  /**
   * @generated from field: bool used_trial = 5;
   */
  usedTrial = false;

  /**
   * @generated from field: string stripe_subscription_id = 6;
   */
  stripeSubscriptionId = "";

  /**
   * @generated from field: bool subscription_active = 7;
   */
  subscriptionActive = false;

  /**
   * @generated from field: string stripe_customer_id = 8;
   */
  stripeCustomerId = "";

  /**
   * @generated from field: google.protobuf.Timestamp current_billing_period_start = 9;
   */
  currentBillingPeriodStart?: Timestamp;

  /**
   * @generated from field: int64 num_seats_current_billing_period = 10;
   */
  numSeatsCurrentBillingPeriod = protoInt64.zero;

  /**
   * @generated from field: bool attribution_enabled = 11;
   */
  attributionEnabled = false;

  /**
   * @generated from field: string sso_provider_id = 12;
   */
  ssoProviderId = "";

  /**
   * @generated from field: bool offers_enabled = 13;
   */
  offersEnabled = false;

  /**
   * @generated from field: exa.codeium_common_pb.TeamsTier teams_tier = 14;
   */
  teamsTier = TeamsTier.UNSPECIFIED;

  /**
   * @generated from field: int64 flex_credit_quota = 15;
   */
  flexCreditQuota = protoInt64.zero;

  /**
   * @generated from field: int64 used_flow_credits = 16;
   */
  usedFlowCredits = protoInt64.zero;

  /**
   * @generated from field: int64 used_prompt_credits = 17;
   */
  usedPromptCredits = protoInt64.zero;

  /**
   * @generated from field: google.protobuf.Timestamp current_billing_period_end = 18;
   */
  currentBillingPeriodEnd?: Timestamp;

  /**
   * @generated from field: int64 num_cascade_seats = 19;
   */
  numCascadeSeats = protoInt64.zero;

  /**
   * @generated from field: google.protobuf.Timestamp cascade_usage_month_start = 20;
   */
  cascadeUsageMonthStart?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp cascade_usage_month_end = 21;
   */
  cascadeUsageMonthEnd?: Timestamp;

  /**
   * @generated from field: exa.seat_management_pb.CascadeSeatType cascade_seat_type = 22;
   */
  cascadeSeatType = CascadeSeatType.UNSPECIFIED;

  /**
   * @generated from field: bool top_up_enabled = 23;
   */
  topUpEnabled = false;

  /**
   * @generated from field: int64 monthly_top_up_amount = 24;
   */
  monthlyTopUpAmount = protoInt64.zero;

  /**
   * @generated from field: int64 top_up_spent = 25;
   */
  topUpSpent = protoInt64.zero;

  /**
   * @generated from field: int64 top_up_increment = 26;
   */
  topUpIncrement = protoInt64.zero;

  /**
   * @generated from field: int64 used_flex_credits = 27;
   */
  usedFlexCredits = protoInt64.zero;

  constructor(data?: PartialMessage<Team>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.Team";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "signup_time", kind: "message", T: Timestamp },
    { no: 4, name: "invite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "used_trial", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "stripe_subscription_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "subscription_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "stripe_customer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "current_billing_period_start", kind: "message", T: Timestamp },
    { no: 10, name: "num_seats_current_billing_period", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "attribution_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "sso_provider_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "offers_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "teams_tier", kind: "enum", T: proto3.getEnumType(TeamsTier) },
    { no: 15, name: "flex_credit_quota", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "used_flow_credits", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 17, name: "used_prompt_credits", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "current_billing_period_end", kind: "message", T: Timestamp },
    { no: 19, name: "num_cascade_seats", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "cascade_usage_month_start", kind: "message", T: Timestamp },
    { no: 21, name: "cascade_usage_month_end", kind: "message", T: Timestamp },
    { no: 22, name: "cascade_seat_type", kind: "enum", T: proto3.getEnumType(CascadeSeatType) },
    { no: 23, name: "top_up_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 24, name: "monthly_top_up_amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 25, name: "top_up_spent", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 26, name: "top_up_increment", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 27, name: "used_flex_credits", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Team {
    return new Team().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Team {
    return new Team().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Team {
    return new Team().fromJsonString(jsonString, options);
  }

  static equals(a: Team | PlainMessage<Team> | undefined, b: Team | PlainMessage<Team> | undefined): boolean {
    return proto3.util.equals(Team, a, b);
  }
}

/**
 * @generated from message exa.seat_management_pb.UserRole
 */
export class UserRole extends Message<UserRole> {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey = "";

  /**
   * @generated from field: repeated string roles = 2;
   */
  roles: string[] = [];

  /**
   * @generated from field: string role_id = 3;
   */
  roleId = "";

  /**
   * @generated from field: string role_name = 4;
   */
  roleName = "";

  constructor(data?: PartialMessage<UserRole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "exa.seat_management_pb.UserRole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "role_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserRole {
    return new UserRole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserRole {
    return new UserRole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserRole {
    return new UserRole().fromJsonString(jsonString, options);
  }

  static equals(a: UserRole | PlainMessage<UserRole> | undefined, b: UserRole | PlainMessage<UserRole> | undefined): boolean {
    return proto3.util.equals(UserRole, a, b);
  }
}

